import { SafeAreaView } from 'react-native-safe-area-context';


import { t } from "../../../src/lib/translations";
import React from "react";
import { View, Text, Pressable, Switch, ScrollView } from 'react-native';
import { Ionicons } from "@expo/vector-icons";
import { useSettings } from "../../../src/contexts/SettingsContext";

export default function Settings() {
  const { theme, setTheme, lang, setLang } = useSettings();
  const L = (pl: string, en: string) => (lang === "pl" ? pl : en);

  const SectionCard: React.FC<{ title: string; children: React.ReactNode }> = ({ title, children }) => (
    <View
      style={{
        backgroundColor: "#F4F7FA",
        borderRadius: 16,
        borderWidth: 1,
        borderColor: "#E6EDF2",
        padding: 16,
        marginBottom: 16,
        shadowColor: "#000",
        shadowOpacity: 0.06,
        shadowRadius: 8,
        shadowOffset: { width: 0, height: 4 },
      }}
    >
      <Text style={{ fontSize: 16, fontWeight: "700", marginBottom: 12 }}>{title}</Text>
      {children}
    </View>
  );

  const Pill: React.FC<{ label: string; selected: boolean; onPress: () => void; flex?: number }> = ({
    label,
    selected,
    onPress,
    flex = 1,
  }) => (
    <Pressable
      onPress={onPress}
      style={{
        flex,
        paddingVertical: 12,
        borderRadius: 12,
        backgroundColor: selected ? "#6D4AFF" : "#F2F4F7",
        alignItems: "center",
        marginHorizontal: 6,
      }}
    >
      <Text style={{ color: selected ? "#fff" : "#0F172A", fontWeight: "700" }}>{label}</Text>
    </Pressable>
  );

  return (
    <SafeAreaView style={{ flex: 1, backgroundColor: "#F4F7FA" }}>
      <ScrollView scrollEnabled={false} bounces={false} alwaysBounceVertical={false} overScrollMode="never" contentContainerStyle={{ padding: 16, paddingBottom: 28 }}>
        {/* Header */}
        <Text style={{ fontSize: 32, fontWeight: "900", color: "#6D4AFF", marginBottom: 12 }}>
          {L("Ustawienia", "Settings")}
        </Text>

        {/* Notifications */}
        <SectionCard title={L("Powiadomienia", "Notifications")}>
          <View style={{ flexDirection: "row", justifyContent: "space-between", alignItems: "center" }}>
            <View style={{ flexDirection: "row", alignItems: "center" }}>
              <Ionicons name="notifications-outline" size={22} color="#475569" />
              <Text style={{ marginLeft: 8, fontSize: 15, color: "#111827" }}>
                {L("Włącz powiadomienia", "Enable notifications")}
              </Text>
            </View>
            <Switch />
          </View>
        </SectionCard>

        {/* Appearance */}
        <SectionCard title={L("Wygląd", "Appearance")}>
          <View style={{ flexDirection: "row", justifyContent: "space-between" }}>
            <Pill label={L("Jasny", "Light")} selected={theme === "light"} onPress={() => setTheme("light")} />
            <Pill label={L("Ciemny", "Dark")} selected={theme === "dark"} onPress={() => setTheme("dark")} />
            <Pill label="Auto" selected={theme === "auto"} onPress={() => setTheme("auto")} />
          </View>
        </SectionCard>

        {/* Language */}
        <SectionCard title={L("Język", "Language")}>
          <View style={{ flexDirection: "row", justifyContent: "space-between" }}>
            <Pill label="Polski" selected={lang === "pl"} onPress={() => setLang("pl")} />
            <Pill label="English" selected={lang === "en"} onPress={() => setLang("en")} />
          </View>
        </SectionCard>

        {/* Other */}
        <SectionCard title={L("Inne opcje", "Other options")}>
          <View style={{ flexDirection: "row", alignItems: "center" }}>
            <Ionicons name="lock-closed-outline" size={20} color="#64748B" />
            <Text style={{ marginLeft: 8, color: "#475569" }}>
              {L("Bezpieczeństwo (wkrótce)", "Security (coming soon)")}
            </Text>
          </View>
        </SectionCard>
      </ScrollView>
    </SafeAreaView>
  );
}




