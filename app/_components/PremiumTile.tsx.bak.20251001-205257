import React, { useMemo } from "react";
import { Pressable, View, Text, StyleSheet, Platform, Dimensions } from "react-native";
import { LinearGradient } from "expo-linear-gradient";

/**
 * MUSI BYĆ SPÓJNE ze styles.grid w index.tsx
 */
const GRID_PADDING = 16; // padding poziomy grida
const GAP = 12;          // pełna przerwa między kafelkami
const COLUMNS = 3;       // zawsze 3x3

type TileProps = {
  label: string;
  icon: JSX.Element;
  onPress: () => void;
};

export default function PremiumTile({ label, icon, onPress }: TileProps) {
  const { width: screenWidth } = Dimensions.get("window");

  // Szerokość liczona pikselowo:
  // avail = screenWidth - 2*GRID_PADDING - (COLUMNS-1)*GAP
  // tileW = floor(avail / COLUMNS)
  const tileWidth = useMemo(() => {
    const avail = screenWidth - (2 * GRID_PADDING) - ((COLUMNS - 1) * GAP);
    return Math.floor(avail / COLUMNS);
  }, [screenWidth]);

  // Delikatne skalowanie UI dla bardzo wąskich/szerokich ekranów
  const s = Math.min(1.06, Math.max(0.92, screenWidth / 390));

  const height = Math.round(98 * s);           // kompaktowa wysokość -> 3 rzędy mieszczą się ładnie
  const badge  = Math.round(48 * s);           // ikona w komfortowym rozmiarze
  const font   = Math.round(14 * s);           // label czytelny, nie "krzyczy"

  return (
    <Pressable
      onPress={onPress}
      style={({ pressed }) => [
        styles.tileBase,
        {
          width: tileWidth,
          height,
          marginLeft: GAP / 2,
          marginRight: GAP / 2
        },
        pressed && styles.tilePressed
      ]}
      testID={`tile-${label}`}
    >
      <View style={{ marginBottom: Math.round(8 * s), shadowColor: "#7C4DFF", shadowOpacity: 0.12, shadowRadius: 8 * s, shadowOffset: { width: 0, height: 5 } }}>
        <LinearGradient
          colors={["#F3F0FF", "#ECE8FF"]}
          start={{ x: 0, y: 0 }}
          end={{ x: 1, y: 1 }}
          style={{ width: badge, height: badge, borderRadius: badge / 2, alignItems: "center", justifyContent: "center", borderWidth: 1, borderColor: "rgba(124,77,255,0.16)", backgroundColor: "#F4F0FF" }}
        >
          {icon}
        </LinearGradient>
      </View>

      <Text style={{ fontSize: font, fontWeight: "600", color: "#0F172A", textAlign: "center", lineHeight: Math.round((font + 4)), paddingHorizontal: 6 }} numberOfLines={2} ellipsizeMode="tail">
        {label}
      </Text>
    </Pressable>
  );
}

const styles = StyleSheet.create({
  tileBase: {
    borderRadius: 18,
    backgroundColor: "#FFFFFF",
    alignItems: "center",
    justifyContent: "center",
    marginBottom: GAP,
    borderWidth: 1,
    borderColor: "#E6EDF2",
    shadowColor: "#000",
    shadowOpacity: 0.06,
    shadowRadius: 8,
    shadowOffset: { width: 0, height: 3 },
    ...(Platform.OS === "android" ? { elevation: 3 } : {})
  },
  tilePressed: {
    shadowOpacity: 0.12,
    transform: [{ scale: 0.985 }]
  }
});
