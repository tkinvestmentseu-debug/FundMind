import React, { useEffect, useRef } from "react";
import { Pressable, Text, StyleSheet, Animated, View } from "react-native";
import { LinearGradient } from "expo-linear-gradient";
import { Sparkles } from "lucide-react-native";

export default function PremiumAiBanner(props: { onPress?: () => void }) {
  const fade = useRef(new Animated.Value(0)).current;
  const slide = useRef(new Animated.Value(10)).current;
  const shine = useRef(new Animated.Value(0)).current;
  const pulse = useRef(new Animated.Value(1)).current;
  const press = useRef(new Animated.Value(1)).current;

  useEffect(() => {
    Animated.parallel([
      Animated.timing(fade, { toValue: 1, duration: 600, useNativeDriver: true }),
      Animated.timing(slide, { toValue: 0, duration: 600, useNativeDriver: true }),
    ]).start();

    Animated.loop(
      Animated.timing(shine, { toValue: 1, duration: 3000, useNativeDriver: true })
    ).start();

    Animated.loop(
      Animated.sequence([
        Animated.timing(pulse, { toValue: 1.04, duration: 1500, useNativeDriver: true }),
        Animated.timing(pulse, { toValue: 1.0, duration: 1500, useNativeDriver: true }),
      ])
    ).start();
  }, []);

  const translateX = shine.interpolate({ inputRange: [0, 1], outputRange: [-250, 250] });

  const onPressIn = () => {
    Animated.spring(press, { toValue: 0.95, useNativeDriver: true }).start();
  };
  const onPressOut = () => {
    Animated.spring(press, { toValue: 1.0, friction: 4, tension: 80, useNativeDriver: true }).start();
  };

  return (
    <Animated.View style={{ opacity: fade, transform: [{ translateY: slide }] }}>
      <Animated.View style={{ transform: [{ scale: Animated.multiply(pulse, press) }] }}>
        <Pressable
          onPress={props.onPress || (() => {})}
          onPressIn={onPressIn}
          onPressOut={onPressOut}
          style={styles.container}
        >
          <LinearGradient
            colors={["#9c6eff", "#cdb9ff"]}
            start={{ x: 0, y: 0 }}
            end={{ x: 1, y: 1 }}
            style={styles.gradient}
          >
            <Sparkles size={22} color="#ffffff" style={{ marginRight: 8 }} />
            <Text style={styles.text}>FundMind AI (Premium)</Text>

            <Animated.View style={[styles.shine, { transform: [{ skewX: "25deg" }, { translateX }] }]} />
          </LinearGradient>
        </Pressable>
      </Animated.View>
    </Animated.View>
  );
}

const styles = StyleSheet.create({
  container: {
    borderRadius: 20,
    overflow: "hidden",
    shadowColor: "#000000",
    shadowOpacity: 0.25,
    shadowRadius: 8,
    elevation: 5,
    marginHorizontal: 16,
    marginTop: 16,
  },
  gradient: {
    padding: 9,
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "center",
    position: "relative",
  },
  text: {
    color: "#ffffff",
    fontWeight: "bold",
    fontSize: 14,
    letterSpacing: 0.5,
  },
  shine: {
    position: "absolute",
    top: 0,
    bottom: 70,
    width: 90,
    backgroundColor: "rgba(255,255,255,0.55)",
    opacity: 0.9,
    borderRadius: 20,
  },
});
