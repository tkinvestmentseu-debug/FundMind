import React, { useState } from "react";
import { View, Text, TextInput, Image, StyleSheet, ScrollView, Pressable, Alert } from "react-native";
import * as ImagePicker from "expo-image-picker";
import { addTransaction, TransactionKind } from "../_data/transactions";
import { Feather } from "@expo/vector-icons";

type Props = { kind: TransactionKind; onSaved?: () => void; };

export default function TransactionForm({ kind, onSaved }: Props) {
  const [title, setTitle] = useState("");
  const [amount, setAmount] = useState("");
  const [image, setImage] = useState<string | null>(null);

  const pickFromLibrary = async () => {
    const res = await ImagePicker.launchImageLibraryAsync({ mediaTypes: ImagePicker.MediaTypeOptions.Images, quality: 0.8 });
    if (!res.canceled && res.assets?.length) setImage(res.assets[0].uri);
  };

  const takePhoto = async () => {
    const perm = await ImagePicker.requestCameraPermissionsAsync();
    if (!perm.granted) { Alert.alert("Brak dostępu do aparatu"); return; }
    const res = await ImagePicker.launchCameraAsync({ quality: 0.8 });
    if (!res.canceled && res.assets?.length) setImage(res.assets[0].uri);
  };

  const onSave = async () => {
    const amt = parseFloat(amount.replace(",", "."));
    if (!title || isNaN(amt)) { Alert.alert("Uzupełnij nazwę i poprawną kwotę"); return; }
    await addTransaction({
      kind,
      title,
      amount: amt,
      dateISO: new Date().toISOString(),
      imageUri: image ?? undefined
    });
    onSaved?.();
  };

  return (
    <ScrollView contentContainerStyle={styles.container}>
      <Text style={styles.label}>Nazwa</Text>
      <TextInput style={styles.input} value={title} onChangeText={setTitle} placeholder="np. Zakupy" />

      <Text style={styles.label}>Kwota</Text>
      <TextInput style={styles.input} value={amount} onChangeText={setAmount} placeholder="np. 123.45" keyboardType="numeric" />

      <View style={styles.images}>
        {image ? <Image source={{ uri: image }} style={styles.image} /> : <Text style={styles.hint}>Brak zdjęcia</Text>}
        <View style={styles.row}>
          <Pressable style={styles.btn} onPress={pickFromLibrary}>
            <Feather name="image" size={18} color="#fff" /><Text style={styles.btnText}> Z galerii</Text>
          </Pressable>
          <Pressable style={[styles.btn, { backgroundColor: "#5B9DFF" }]} onPress={takePhoto}>
            <Feather name="camera" size={18} color="#fff" /><Text style={styles.btnText}> Aparat</Text>
          </Pressable>
        </View>
      </View>

      <Pressable style={[styles.btn, { alignSelf: "center", paddingHorizontal: 18, backgroundColor: "#16A34A" }]} onPress={onSave}>
        <Feather name="save" size={18} color="#fff" /><Text style={styles.btnText}> Zapisz transakcję</Text>
      </Pressable>
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: { flexGrow: 1, padding: 20, backgroundColor: "#F6F8FB" },
  label: { fontSize: 15, fontWeight: "600", marginTop: 14, color: "#0F172A" },
  input: { backgroundColor: "#fff", borderWidth: 1, borderColor: "#E6EDF2", borderRadius: 10, padding: 12, marginTop: 8 },
  images: { marginVertical: 18, alignItems: "center" },
  image: { width: 220, height: 220, borderRadius: 12, marginBottom: 12 },
  hint: { color: "#64748B", marginBottom: 12 },
  row: { flexDirection: "row", gap: 10 },
  btn: { flexDirection: "row", alignItems: "center", gap: 6, backgroundColor: "#7C4DFF", paddingVertical: 10, paddingHorizontal: 12, borderRadius: 10 },
  btnText: { color: "#fff", fontWeight: "700" },
});
