import React, { useMemo } from "react";
import { Pressable, View, Text, StyleSheet, Platform, Dimensions } from "react-native";
import { LinearGradient } from "expo-linear-gradient";

/**
 * Spójne ze styles.grid w index.tsx
 */
const GRID_PADDING = 14; // mniejszy padding ekranu
const GAP = 10;          // węższa przerwa między kafelkami
const COLUMNS = 3;       // zawsze 3 kolumny

type TileProps = {
  label: string;
  icon: JSX.Element;
  onPress: () => void;
};

export default function PremiumTile({ label, icon, onPress }: TileProps) {
  const { width: w } = Dimensions.get("window");

  // szerokość kafelka = floor( (w - 2*padding - 2*gap) / 3 )
  const tileWidth = useMemo(() => {
    const avail = w - (2 * GRID_PADDING) - ((COLUMNS - 1) * GAP);
    return Math.floor(avail / COLUMNS);
  }, [w]);

  // delikatna skala dla róznych szerokości (SE/mini vs Max)
  const s = Math.min(1.04, Math.max(0.90, w / 390));

  const height = Math.round(90 * s);     // KOMPAKTOWO
  const badge  = Math.round(44 * s);     // mniejsza ikona
  const font   = Math.round(13 * s);     // mniejszy label (semi-bold)

  return (
    <Pressable
      onPress={onPress}
      style={({ pressed }) => [
        styles.tileBase,
        {
          width: tileWidth,
          height,
          marginLeft: GAP / 2,
          marginRight: GAP / 2
        },
        pressed && styles.tilePressed
      ]}
      testID={`tile-${label}`}
    >
      <View style={{ marginBottom: Math.round(6 * s), shadowColor: "#7C4DFF", shadowOpacity: 0.10, shadowRadius: 6 * s, shadowOffset: { width: 0, height: 4 } }}>
        <LinearGradient
          colors={["#F4F1FF", "#EEEAFE"]}
          start={{ x: 0, y: 0 }}
          end={{ x: 1, y: 1 }}
          style={{ width: badge, height: badge, borderRadius: badge/2, alignItems: "center", justifyContent: "center", borderWidth: 1, borderColor: "rgba(124,77,255,0.14)", backgroundColor: "#F6F3FF" }}
        >
          {icon}
        </LinearGradient>
      </View>

      <Text
        style={{ fontSize: font, fontWeight: "600", color: "#0F172A", textAlign: "center", lineHeight: Math.round(font + 3), paddingHorizontal: 4 }}
        numberOfLines={2}
        ellipsizeMode="tail"
      >
        {label}
      </Text>
    </Pressable>
  );
}

const styles = StyleSheet.create({
  tileBase: {
    borderRadius: 16,
    backgroundColor: "#FFFFFF",
    alignItems: "center",
    justifyContent: "center",
    marginBottom: GAP,
    borderWidth: 1,
    borderColor: "#E6EDF2",
    shadowColor: "#000",
    shadowOpacity: 0.05,
    shadowRadius: 7,
    shadowOffset: { width: 0, height: 3 },
    ...(Platform.OS === "android" ? { elevation: 2 } : {})
  },
  tilePressed: {
    shadowOpacity: 0.10,
    transform: [{ scale: 0.985 }]
  }
});
