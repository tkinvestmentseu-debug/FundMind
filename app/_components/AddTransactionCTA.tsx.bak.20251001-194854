import React, { useEffect, useRef } from "react";
import { View, Text, Pressable, StyleSheet, Animated, Easing } from "react-native";
import { Link } from "expo-router";
import { LinearGradient } from "expo-linear-gradient";

const AnimatedLinear = Animated.createAnimatedComponent(LinearGradient);

// Glossy CTA with animated shimmer sweep
export default function AddTransactionCTA() {
  const shine = useRef(new Animated.Value(0)).current;

  useEffect(() => {
    const loop = Animated.loop(
      Animated.sequence([
        Animated.timing(shine, { toValue: 1, duration: 2200, easing: Easing.inOut(Easing.quad), useNativeDriver: true }),
        Animated.timing(shine, { toValue: 0, duration: 0, useNativeDriver: true })
      ])
    );
    loop.start();
    return () => { loop.stop(); };
  }, [shine]);

  // translateX from -40% to +140% to sweep through whole card
  const translate = shine.interpolate({ inputRange: [0, 1], outputRange: [-0.4, 1.4] });

  return (
    <View style={styles.wrapper}>
      <Link href="/addTransaction" asChild>
        <Pressable
          testID="AddTransactionCTA"
          style={({ pressed }) => [styles.cta, pressed && styles.ctaPressed]}
        >
          {/* Gradient background */}
          <LinearGradient
            colors={["#7C4DFF", "#8B6CFF", "#7C4DFF"]}
            start={{ x: 0, y: 0.5 }}
            end={{ x: 1, y: 0.5 }}
            style={StyleSheet.absoluteFill}
          />

          {/* Shimmer sweep overlay */}
          <AnimatedLinear
            pointerEvents="none"
            colors={["rgba(255,255,255,0)", "rgba(255,255,255,0.45)", "rgba(255,255,255,0)"]}
            start={{ x: 0, y: 0.2 }}
            end={{ x: 1, y: 0.8 }}
            style={[
              styles.shine,
              {
                transform: [{ translateX: Animated.multiply(translate, styles.shine.width) }]
              }
            ]}
          />

          <View style={styles.content}>
            <Text style={styles.title}>Dodaj transakcje</Text>
            <Text style={styles.subtitle}>Szybko dodaj nowy wydatek lub przychod</Text>
          </View>
        </Pressable>
      </Link>
    </View>
  );
}

const styles = StyleSheet.create({
  wrapper: {
    width: "100%",
    alignItems: "center",
    marginTop: 24,
    marginBottom: 32,
    paddingHorizontal: 20
  },
  cta: {
    width: "100%",
    borderRadius: 20,
    overflow: "hidden",
    paddingVertical: 22,
    paddingHorizontal: 20,
    shadowColor: "#000",
    shadowOpacity: 0.12,
    shadowRadius: 14,
    shadowOffset: { width: 0, height: 6 },
    // subtle border to keep consistent with the rest
    borderWidth: 1,
    borderColor: "rgba(230,237,242,0.65)"
  },
  ctaPressed: {
    opacity: 0.92,
    transform: [{ scale: 0.985 }]
  },
  content: {
    alignItems: "center"
  },
  title: {
    fontSize: 20,
    fontWeight: "800",
    color: "#FFFFFF",
    textAlign: "center",
    letterSpacing: 0.3,
    marginBottom: 6
  },
  subtitle: {
    fontSize: 14,
    color: "rgba(255,255,255,0.92)",
    textAlign: "center"
  },
  // width is used only for translate math; RN ignores unknown style values at runtime, so we store number here
  shine: {
    position: "absolute",
    top: 0,
    bottom: 0,
    width: 120, // logical width for animation multiplier
    opacity: 0.9
  } as any
});
