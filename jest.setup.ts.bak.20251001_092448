/* Jest global setup for FundMind (ASCII-only) */
/* Ensure React 18 test renderer semantics and silence native animation warnings */

// Timers: use modern fake timers where needed within tests; keep real timers by default
// Polyfill setImmediate if needed by libs
if (typeof global.setImmediate === "undefined") {
  // eslint-disable-next-line no-undef
  global.setImmediate = (fn: any, ...args: any[]) => setTimeout(fn as any, 0, ...args);
}

// Silence RN Animated: NativeAnimatedHelper
jest.mock("react-native/Libraries/Animated/NativeAnimatedHelper");

// React Native Reanimated v3 mock (official recommendation with extra .default.call no-op)
jest.mock("react-native-reanimated", () => {
  const Reanimated = require("react-native-reanimated/mock");
  Reanimated.default.call = () => {};
  // Worklet bootstrap no-op
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  (global as any).__reanimatedWorkletInit = () => {};
  return Reanimated;
});

// Optional: gesture handler jest setup (safe if package exists)
try {
  // eslint-disable-next-line @typescript-eslint/no-var-requires
  require("react-native-gesture-handler/jestSetup");
} catch {}

// Expo Router lightweight mock to avoid navigation side-effects in tests
jest.mock("expo-router", () => {
  const React = require("react");
  const api = {
    useRouter: () => ({ push: jest.fn(), replace: jest.fn(), back: jest.fn(), navigate: jest.fn() }),
    useLocalSearchParams: () => ({}),
    useSegments: () => [],
    Link: ({ children, href }: any) => React.createElement("a", { "data-href": href }, children),
    Slot: ({ children }: any) => React.createElement(React.Fragment, null, children),
    Stack: ({ children }: any) => React.createElement(React.Fragment, null, children),
    Tabs: ({ children }: any) => React.createElement(React.Fragment, null, children),
  };
  return api;
});

// react-native-svg safe fallback
jest.mock("react-native-svg", () => {
  const React = require("react");
  const View = (props: any) => React.createElement("svg", props);
  return {
    __esModule: true,
    default: View,
    Svg: View,
    Path: (p: any) => React.createElement("path", p),
    Circle: (p: any) => React.createElement("circle", p),
    Rect: (p: any) => React.createElement("rect", p),
    G: (p: any) => React.createElement("g", p),
  };
});

// Stable RN env shims
// eslint-disable-next-line @typescript-eslint/no-explicit-any
(global as any).__DEV__ = true;
